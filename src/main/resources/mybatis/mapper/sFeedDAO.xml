<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace는 이 매퍼가 어떤 인터페이스와 연관된 매퍼인지를 설정 -->
<mapper namespace="com.ex.springboot.dao.IFeedDAO">
<!-- id는 인터페이스에 정의된 메서드의 이름이며 resultType은 결과 타입을 지정한다. -->
	<!-- 홈에서 피드 리스트 랜덤 출력 -->
	<select id="feedList_random" resultType="com.ex.springboot.dto.FeedDTO">
		SELECT 
		    A.Feed_num,
		    B.Member_Id,
		    B.Member_profileimage,  
		    A.Feed_title, 
		    A.Feed_content,
		    A.Feed_theme,  
		    A.Feed_area,  
		    A.Feed_uploadday, 
		    A.Feed_updateday, 
		    A.Feed_thumbnail
		FROM 
		    Feed A 
		LEFT JOIN 
		    carrier_member B 
		ON 
		    A.Member_id = B.Member_id
		WHERE Feed_num BETWEEN 1 AND 900 
		ORDER BY DBMS_RANDOM.value
	</select>
	
	
	<!-- 피드 글쓰기 -->
	<insert id="feedWrite">
		INSERT INTO Feed 
			(Feed_num, Member_Id, Feed_title, Feed_content, Feed_theme, Feed_area, Feed_uploadday, Feed_updateday, Feed_heart, Feed_thumbnail) 
	    VALUES 
	    	(Feed_num_seq.nextval, #{Member_Id}, #{Feed_title}, #{Feed_content}, #{Feed_theme}, #{Feed_area}, sysdate, sysdate, 0, #{Feed_thumbnail})
	</insert>
	
	<!-- 피드 리스트 가져오기 -->
	<select id="feedList" resultType="com.ex.springboot.dto.FeedDTO">
		SELECT A.Feed_num, B.Member_id, B.Member_profileimage, A.Feed_title, A.Feed_content, A.Feed_theme, A.Feed_area, A.Feed_uploadday, A.Feed_updateday, A.Feed_thumbnail FROM Feed A LEFT JOIN carrier_member B ON A.Member_id = B.Member_id ORDER BY Feed_uploadday DESC
	</select>
	
	<!-- 피드 리스트[theme filter] 가져오기 -->
	<select id="feedList_theme" resultType="com.ex.springboot.dto.FeedDTO">
		SELECT 
		    A.Feed_num,
		    B.Member_Id,
		    B.Member_profileimage,  
		    A.Feed_title,
		    A.Feed_content,
		    A.Feed_theme,
		    A.Feed_area, 
		    A.Feed_uploadday,
		    A.Feed_updateday,
		    A.Feed_thumbnail FROM Feed A RIGHT OUTER JOIN carrier_member B ON A.Member_id = B.Member_id WHERE A.Feed_theme = #{Feed_theme}
	</select>
	
	<!-- 피드 리스트[area filter] 가져오기 -->
	<select id="feedList_area" resultType="com.ex.springboot.dto.FeedDTO">
		SELECT 
		    A.Feed_num,
		    B.Member_Id,
		    B.Member_profileimage,  
		    A.Feed_title,
		    A.Feed_content,
		    A.Feed_theme,
		    A.Feed_area, 
		    A.Feed_uploadday,
		    A.Feed_updateday,
		    A.Feed_thumbnail FROM Feed A RIGHT OUTER JOIN carrier_member B ON A.Member_id = B.Member_id WHERE A.Feed_area = #{Feed_area}
	</select>
	
	<!-- 최신순 피드 리스트 -->
	<select id="feedListRecent" resultType="com.ex.springboot.dto.FeedDTO">
		SELECT * FROM Feed order by Feed_uploadday DESC
	</select>
	
	<!-- 인기순(좋아요) 피드 리스트 -->
	<select id="feedListHeart" resultType="com.ex.springboot.dto.FeedDTO">
		SELECT * FROM Feed order by Feed_heart DESC
	</select>
	
	<!-- 피드 세부 가져오기 -->
	<select id="feedShow" resultType="com.ex.springboot.dto.FeedDTO">
		SELECT 
		    A.Feed_num,
		    B.Member_id,
		    B.Member_profileimage,  
		    A.Feed_title,
		    A.Feed_content,
		    A.Feed_theme,
		    A.Feed_area,
		    A.Feed_uploadday,
		    A.Feed_updateday,
		    A.Feed_thumbnail
		FROM 
		    Feed A 
		RIGHT OUTER JOIN 
		    carrier_member B 
		ON 
		    A.Member_id = B.Member_id 
		WHERE 
		    A.Feed_num = #{Feed_num}
	</select>
	
	<!-- 피드 수정 -->
	<update id="feedUpdate">
		UPDATE Feed SET 
			Feed_title = #{Feed_title}, Feed_content= #{Feed_content}, Feed_theme= #{Feed_theme}, Feed_area= #{Feed_area}, Feed_updateday = sysdate, Feed_thumbnail = #{Feed_thumbnail} 
		WHERE 
			Feed_num = #{Feed_num}
	</update>
	
	<!-- 피드 삭제 -->
	<delete id="feedDel">
		DELETE FROM Feed WHERE Feed_num = #{Feed_num}
	</delete>
	
	<!-- 피드 좋아요 수정 -->
	<update id="feedLike">
		UPDATE Feed SET Feed_heart = #{Feed_heart} WHERE Feed_num = #{Feed_num}
	</update>

	<!-- 댓글 달기 -->
	<insert id="feedCommentCreate">
		INSERT INTO FeedComment 
			(Feed_num, Feed_comment_num, Member_Id, Feed_comment, Feed_comment_like, Feed_comment_updateday) 
		VALUES 
			(#{Feed_num}, Feed_comment_num_seq.nextval, #{Member_Id}, #{Feed_comment}, 0, sysdate)
	</insert>
	
	<!-- 댓글 보기 -->
	<select id="feedCommentList" resultType="com.ex.springboot.dto.Feed_commentDTO">
		SELECT A.Feed_num, A.Feed_comment_num, B.Member_id, B.Member_profileimage, A.Feed_comment, A.Feed_comment_like, A.Feed_comment_updateday FROM FeedComment A RIGHT OUTER JOIN carrier_member B ON A.Member_id = B.Member_id WHERE A.Feed_num = #{Feed_num} ORDER BY Feed_comment_num DESC
	</select>
	
	<!-- 댓글 수정 -->
	<update id="feedCommentUpdate">
		UPDATE FeedComment SET Feed_comment=#{Feed_comment}, Feed_comment_updateday = sysdate WHERE Feed_num = #{Feed_num} AND Feed_comment_num = #{Feed_comment_num}
	</update>
	
	<!-- 댓글 삭제-->
	<delete id="feedCommentDel">
		DELETE FROM FeedComment WHERE Feed_num = #{Feed_num} AND Feed_comment_num = #{Feed_comment_num}
	</delete>
	
	<!-- 댓글 좋아요 -->
	<update id="feedCommentLike">
		UPDATE FeedComment SET Feed_comment_like = #{Feed_comment_like} WHERE Feed_num = #{Feed_num} AND Feed_comment_num = #{Feed_comment_num}
	</update>
</mapper>