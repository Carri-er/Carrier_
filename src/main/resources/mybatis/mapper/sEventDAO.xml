<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace는 이매퍼가 어떤 인터페이스와 연관된 매퍼인지를 설정 -->
<mapper namespace="com.ex.springboot.dao.IEventDAO">
	<!-- 전체 여행 정보 list를 불러옴 -->
	<select id="list" resultType="com.ex.springboot.dto.EventDTO">
		select * from Event
	</select>
	<select id="hitDESC" resultType="com.ex.springboot.dto.EventDTO">
	   <![CDATA[
    SELECT *
    FROM (
        SELECT rownum AS rnum, e.*
        FROM (
            SELECT *
            FROM Event
            order by Event_hit desc
        ) e
        WHERE rownum <= #{pageSize}
    )
    WHERE rnum > #{offset}
    
    ]]>
	</select>
	<!-- 파라미터 값으로 여행 정보를 불러옴 -->
	<select id="EventView"
		resultType="com.ex.springboot.dto.EventDTO">
		select * from Event where Event_num = #{param1}
	</select>
	<!-- 중복값 제외한 지역 태그 전체 불러오기 -->
	<select id="areaTag" resultType="java.lang.String">
		SELECT DISTINCT Event_area
		FROM
		Event
	</select>
	<!-- 중복값 제외한 지역 태그 전체 불러오기 -->
	<select id="areaTagselect" resultType="java.lang.String">
		SELECT DISTINCT Event_area
		FROM Event where Event_area like '%' || #{param1} || '%'
	</select>
	<select id="areaTagselectarea" resultType="java.lang.String">
		Select DISTINCT
		Event_area from Event where #{param1} in (event_category)
	</select>
	<!-- 중복되는 태그 없이 태그 1~5의 값을 전체 불러옴 -->
	<select id="getDistinctTags" resultType="java.lang.String">
		<!-- SELECT DISTINCT tag
		FROM
		(SELECT Event_tag AS Tag FROM Event
		UNION ALL
		SELECT Event_tag2 AS Tag
		FROM Event
		UNION ALL
		SELECT Event_tag3 AS Tag FROM Event
		UNION ALL
		SELECT
		Event_tag4 AS Tag FROM Event
		UNION ALL
		SELECT Event_tag5 AS Tag FROM
		Event) all_tags
		 -->
		 SELECT DISTINCT Event_category FROM event
	</select>
	<!-- 지역 태그 클릭시 리스트 불러옴 -->
	<select id="EventArea"
		resultType="com.ex.springboot.dto.EventDTO">
		<![CDATA[
    Select * from Event where Event_area like '%' || #{param1} || '%'
    ]]>
	</select>
	<!-- 태그 클릭시 중복값 없이 태그들 불러옴 -->
	<select id="EventTagTag" resultType="java.lang.String"
		parameterType="string">
		 SELECT DISTINCT Event_category FROM event
	</select>

	<!-- 태그 클릭시 파라미터 값으로 정보 리스트를 불러옴 -->
	<select id="EventTags"
		resultType="com.ex.springboot.dto.EventDTO">
		<![CDATA[
    Select * from Event where #{param1} in event_category
    ]]>
	</select>

	<!-- 태그 클릭시 파라미터 값으로 중복되는 태그없이 태그들을 불러옴 -->
	<select id="EventTag" resultType="java.lang.String"
		parameterType="string">
		SELECT DISTINCT tag FROM ( 
SELECT Event_category AS Tag FROM Event 
where Event_area like '%' ||
		#{param1} || '%'
) all_tags
	</select>

	<!-- 파라미터 값들을 전송하여 여행 글 작성 -->
	<insert id="event_write">
		insert into Event values (
		Event_seq.nextval,
		#{Event_name},
		#{Event_tag},
		#{Event_tag2},
		#{Event_tag3},
		#{Event_tag4},
		#{Event_tag5},
		#{Event_title},
		#{Event_content},
		#{Event_category},
		0,
		#{Event_area},
		#{Event_area2},
		sysdate,
		sysdate,
		#{Event_phone},
		#{Event_address},
		#{Event_time},
		#{Event_starttime},
		#{Event_endtime},
		#{Event_rest},
		#{Event_parking},
		#{Event_host},
		#{Event_thumbnail},
		#{Event_mapX},
		#{Event_mapY}
		)
	</insert>
	<!-- 파라미터 값들을 전송하여 여행 글 수정 -->
	<update id="event_write_update">
		update event set
		Event_name=#{Event_name},Event_tag=#{Event_tag},Event_tag2=#{Event_tag2},Event_tag3=#{Event_tag3},Event_tag4=#{Event_tag4},Event_tag5=#{Event_tag5},Event_title=#{Event_title},Event_content=#{Event_content},Event_category=#{Event_category},Event_area=#{Event_area},Event_area2=#{Event_area2},Event_update=sysdate,Event_phone=#{Event_phone},Event_address=#{Event_address},Event_time=#{Event_time},Event_starttime=#{Event_starttime},Event_endtime=#{Event_endtime},Event_rest=#{Event_rest},Event_parking=#{Event_parking},Event_host=#{Event_host},Event_thumbnail=#{Event_thumbnail},Event_mapX=#{Event_mapX},Event_mapY=#{Event_mapY}
		where Event_num=#{Event_num}
	</update>
	<!-- 파라미터 값을 전송하여 여행 글 삭제 -->
	<delete id="event_delete">
		delete event where event_num =#{param1}
	</delete>

	<!-- 전체 글 갯수를 불러옴 -->
	<select id="getPostCount" resultType="int">
		SELECT COUNT(*) AS
		Post_Count
		FROM event
	</select>
	<select id="getHitDescCount" resultType="int">
		SELECT COUNT(*) AS
		Post_Count
		FROM event order by Event_hit desc
	</select>
	<select id="getPostCount2" resultType="int">
		SELECT COUNT(*) AS
		Post_Count
		FROM course
	</select>
	<select id="getPostCountSearch" resultType="int">
		SELECT COUNT(*) AS
		Post_Count
		FROM event WHERE Event_content LIKE '%' || #{key} || '%' or Event_area = #{key} or event_title like '%' || #{key} || '%' ORDER BY event_hit DESC
	</select>

	<!-- 파라미터 값으로 댓글을 가져옴 -->
	<select id="EventCommentList"
		resultType="com.ex.springboot.dto.EventCommentDTO">
		select
		A.Member_Id,
		A.eventcomment_num,
		A.eventcomment_content,
		A.eventcomment_upload,
		A.eventcomment_update,
		A.Event_num,
		B.Member_profileimage
		from
		eventcomment A
		right outer join
		carrier_member B
		on
		A.Member_id = B.Member_id
		where
		A.Event_num =
		#{param1}
		order by A.eventcomment_num desc
	</select>

	<insert id="EventCommentWrite">
		insert into Eventcomment
		values(#{Member_Id},Event_seq_comment.nextval,#{eventcomment_content},sysdate,sysdate,#{Event_num})
	</insert>

	<select id="EventCommentListUpdate"
		resultType="com.ex.springboot.dto.EventCommentDTO">
		select
		A.Member_Id,
		A.eventcomment_num,
		A.eventcomment_content,
		A.eventcomment_upload,
		A.eventcomment_update,
		A.Event_num,
		B.Member_profileimage
		from
		eventcomment A
		right outer join
		carrier_member B
		on
		A.Member_id = B.Member_id
		where
		A.eventcomment_num = #{param1}
		order by A.eventcomment_num desc
	</select>

	<select id="EventCommentListUpdateList"
		resultType="com.ex.springboot.dto.EventCommentDTO">
		select * from eventcomment where eventcomment_num =
		#{param1}
	</select>
	<update id="EventCommentUpdate">
		update Eventcomment set
		eventcomment_content=#{eventcomment_content},eventcomment_update=
		sysdate where eventcomment_num = #{eventcomment_num}
	</update>

	<delete id="EventCommentUpdateDelete">
		delete Eventcomment where eventcomment_num =
		#{param1}
	</delete>
	<delete id="EventCommentDelete">
		delete Eventcomment where Event_num =
		#{param1}
	</delete>

	<!-- 페이징을 위한 이벤트 리스트 조회 -->
	<select id="listWithPagination"
		resultType="com.ex.springboot.dto.EventDTO">
    <![CDATA[
    SELECT *
    FROM (
        SELECT rownum AS rnum, e.*
        FROM (
            SELECT *
            FROM Event
            ORDER BY Event_num DESC
        ) e
        WHERE rownum <= #{pageSize}
    )
    WHERE rnum > #{offset}
    ]]>
	</select>
	<select id="listWithPagination2"
		resultType="com.ex.springboot.dto.CourseDTO">
    <![CDATA[
    SELECT *
    FROM (
        SELECT rownum AS rnum, e.*
        FROM (
            SELECT *
            FROM Course
            ORDER BY Course_num DESC
        ) e
        WHERE rownum <= #{pageSize}
    )
    WHERE rnum > #{offset}
    ]]>
	</select>
	<!-- 저장된 여행 코스 전체 리스트 출력  -->
	<select id="tripCourseAllList"
		resultType="com.ex.springboot.dto.CourseDTO">
    <![CDATA[
    SELECT *
    FROM (
        SELECT rownum AS rnum, e.*
        FROM (
            SELECT *
            FROM Course
            ORDER BY Course_num DESC
        ) e
        
    )
    
    ]]>
	</select>
	<select id="listWithPaginationSearch"
		resultType="com.ex.springboot.dto.EventDTO">
    <![CDATA[
    SELECT *
    FROM (
        SELECT rownum AS rnum, e.*
        FROM (
            SELECT *
            FROM Event
            WHERE Event_content LIKE '%' || #{key} || '%' or Event_area =#{key} or event_title like '%' || #{key} || '%'
            ORDER BY Event_hit DESC
        ) e
        WHERE rownum <= #{pageSize}
    )
    WHERE rnum > #{offset}
    ]]>
	</select>
	<select id="listWithPaginationArea"
		resultType="com.ex.springboot.dto.EventDTO">
    <![CDATA[
    SELECT *
    FROM (
        SELECT rownum AS rnum, e.*
        FROM (
            SELECT *
            FROM Event
            WHERE Event_area LIKE '%' || #{area} || '%'
            ORDER BY Event_num DESC
        ) e
        WHERE rownum <= #{pageSize}
    )
    WHERE rnum > #{offset}
    ]]>
	</select>
	<select id="listWithPaginationTag"
		resultType="com.ex.springboot.dto.EventDTO">
    <![CDATA[
    SELECT *
    FROM (
        SELECT rownum AS rnum, e.*
        FROM (
            SELECT *
            FROM Event
            where #{tag} in Event_category
            ORDER BY Event_num DESC
        ) e
        WHERE rownum <= #{pageSize}
    )
    WHERE rnum > #{offset}
    ]]>
	</select>
	<update id="EventHiteUpdate">
	update event set Event_hit =#{param2} where Event_num=#{param1}
	</update>
	<select id="infoHome"
		resultType="com.ex.springboot.dto.EventDTO">
    SELECT * FROM Event WHERE Event_category NOT IN ('맛집', '카페') AND Event_title IS NOT NULL
ORDER BY DBMS_RANDOM.RANDOM()
FETCH FIRST 4 ROWS ONLY 
	</select>
	<select id="infoHome2"
		resultType="com.ex.springboot.dto.EventDTO">
    SELECT * FROM Event WHERE Event_category NOT IN ('맛집', '카페')
ORDER BY DBMS_RANDOM.RANDOM()
FETCH FIRST 4 ROWS ONLY 
	</select>

</mapper>